# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Access MOVIE_DB_API_KEY
        env:
          MOVIE_DB_API_KEY_ENV_VAR: ${{ secrets.MOVIE_DB_API_KEY_ENV_VAR }}
        run: echo movie_db_api_key=$MOVIE_DB_API_KEY_ENV_VAR > ./local.properties
      #      - name: Access CERT_PINNER_1
      #        env:
      #          CERT_PINNER_1_ENV_VAR: ${{ secrets.CERT_PINNER_1_ENV_VAR }}
      #        run: echo cert_pinner_1=$CERT_PINNER_1_ENV_VAR > ./local.properties
      #      - name: Access CERT_PINNER_2
      #        env:
      #          CERT_PINNER_2_ENV_VAR: ${{ secrets.CERT_PINNER_2_ENV_VAR }}
      #        run: echo cert_pinner_2=$CERT_PINNER_2_ENV_VAR > ./local.properties
      #      - name: Access CERT_PINNER_3
      #        env:
      #          CERT_PINNER_3_ENV_VAR: ${{ secrets.CERT_PINNER_3_ENV_VAR }}
      #        run: echo cert_pinner_3=$CERT_PINNER_3_ENV_VAR > ./local.properties
      #      - name: Access CERT_PINNER_4
      #        env:
      #          CERT_PINNER_4_ENV_VAR: ${{ secrets.CERT_PINNER_4_ENV_VAR }}
      #        run: echo cert_pinner_4=$CERT_PINNER_4_ENV_VAR > ./local.properties

      - name: Update Dependencies
        run: sudo apt-get update
      - name: Upgrade Dependencies
        run: sudo apt-get upgrade
      - name: Download Ruby
        run: sudo apt-get install ruby-full build-essential
      - name: Install Rake
        run: sudo gem install rake
      - name: Install Digest CRC
        run: sudo gem install digest-crc
      - name: Install Bundler 2.0.2
        run: sudo gem install bundler && bundle update
      - name: Set Ruby Version
        run: echo "ruby-2.4" > ~/.ruby-version # Replace 2.4 with the specific version of Ruby here.
      - name: Download Ruby Dependencies
        run: bundle check || bundle install --path vendor/bundle
      - name: Install Bundle
        run: bundle install
      - name: install fastlane
        run: sudo gem install fastlane
      - name: Update Bundle
        run: bundle update --bundler
      - name: Chmod permissions #if permission for Gradlew Dependencies fail, use this.
        run: sudo chmod +x ./gradlew
      - name: Log Fastlane
        run: bundle exec fastlane env
      - name: Install Fastlane Firebase App Distribution
        run: bundle exec fastlane add_plugin firebase_app_distribution

      - name: Decode Google Cloud credentials
        env:
          GCLOUD_SERVICE_KEY_ENV_VAR: ${{ secrets.GCLOUD_SERVICE_KEY_ENV_VAR }}
        run: echo $GCLOUD_SERVICE_KEY_ENV_VAR | base64 -di > ./client-secret.json
      - name: Build APK with Fastlane
        run: bundle exec fastlane build task:assembleDebug
      - name: Deploy APK to Firebase App Distribution
        run: bundle exec fastlane deployToFirebaseAppDistribution
