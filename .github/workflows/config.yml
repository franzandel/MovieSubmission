# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Access MOVIE_DB_API_KEY
        env:
          MOVIE_DB_API_KEY_ENV_VAR: ${{ secrets.MOVIE_DB_API_KEY_ENV_VAR }}
        run: echo movie_db_api_key=$MOVIE_DB_API_KEY_ENV_VAR > ./local.properties
      - name: Access CERT_PINNER_1
        env:
          CERT_PINNER_1_ENV_VAR: ${{ secrets.CERT_PINNER_1_ENV_VAR }}
        run: echo cert_pinner_1=$CERT_PINNER_1_ENV_VAR > ./local.properties
      - name: Access CERT_PINNER_2
        env:
          CERT_PINNER_2_ENV_VAR: ${{ secrets.CERT_PINNER_2_ENV_VAR }}
        run: echo cert_pinner_2=$CERT_PINNER_2_ENV_VAR > ./local.properties
      - name: Access CERT_PINNER_3
        env:
          CERT_PINNER_3_ENV_VAR: ${{ secrets.CERT_PINNER_3_ENV_VAR }}
        run: echo cert_pinner_3=$CERT_PINNER_3_ENV_VAR > ./local.properties
      - name: Access CERT_PINNER_4
        env:
          CERT_PINNER_4_ENV_VAR: ${{ secrets.CERT_PINNER_4_ENV_VAR }}
        run: echo cert_pinner_4=$CERT_PINNER_4_ENV_VAR > ./local.properties

      - name: Read local.properties
        id: package
        uses: juliangruber/read-file-action@v1
        with:
          path: ./local.properties
      - name: Echo local.properties
        run: echo "${{ steps.package.outputs.content }}"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Clean
        run: ./gradlew clean
      - name: Build with Gradle
        run: ./gradlew assembleDebug
